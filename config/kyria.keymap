/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _LCTL   &mt LCTL ESC
#define _RET    &mt RSFT RET
#define _GUISPC &mt LGUI SPC


#define QWERTY &to 0

//#define ltp lt
#define pinky_layer 1
#define PINKY(kp) &ltp pinky_layer kp

#define nav_layer 2
#define NAVFN &lt nav_layer SPC

#define num_layer 3
#define NUMFN(kp) &lt num_layer kp
#define NUM &mo num_layer

#define fn_layer 4
#define FN &mo fn_layer

//#define colemak_layer 1
//#define COLEMAK &to colemak_layer

//#define plover_layer 2
//#define PLOVER &to plover_layer


#define TAPPING_TERM 200
#define AS(k) &asft k LS(k)
#define BINDINGS(                            \
    k00, k01, k02, k03, k04, k05,            \
    k10, k11, k12, k13, k14, k15,            \
    k20, k21, k22, k23, k24, k25, k26, k27,  \
              k32, k33, k34, k35, k36, k37,  \
                                             \
              k0a, k0b, k0c, k0d, k0e, k0f,  \
              k1a, k1b, k1c, k1d, k1e, k1f,  \
    k28, k29, k2a, k2b, k2c, k2d, k2e, k2f,  \
    k38, k39, k3a, k3b, k3c, k3d)            \
    \
    <k00 k01 k02 k03 k04 k05                 k0a k0b k0c k0d k0e k0f  \
     k10 k11 k12 k13 k14 k15                 k1a k1b k1c k1d k1e k1f  \
     k20 k21 k22 k23 k24 k25 k26 k27 k28 k29 k2a k2b k2c k2d k2e k2f  \
             k32 k33 k34 k35 k36 k37 k38 k39 k3a k3b k3c k3d>;


/ {

    behaviors {
        ltp: behavior_layer_tap_permissive {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_PERMISSIVE";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping_term_ms = <TAPPING_TERM>;
            bindings = <&mo>, <&kp>;
        };
        
        mtp: behavior_mod_tap_permissive {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_PERMISSIVE";
            #binding-cells = <2>;
            tapping_term_ms = <TAPPING_TERM>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        
        asft: behavior_autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp TAB  &kp Q &kp W &kp E &kp R &kp T                                     &kp Y &kp U &kp I    &kp O    &kp P       &kp K_MUTE
    _LCTL    AS(A) &kp S &kp D &kp F &kp G                                     &kp H &kp J &kp K    &kp L    PINKY(SCLN) &kp SQT
    &kp LSFT &kp Z &kp X &kp C &kp V &kp B &kp LSFT &kp LSFT &kp LSFT &kp LSFT &kp N &kp M &kp CMMA &kp DOT  &kp FSLH    _RET
                      FN &kp LCTL &kp LALT _GUISPC  NUM      NUM      NAVFN    &kp LSFT &kp RCTL FN
            >;
        };

        pinky_layer {
            bindings = <
    &kp GRAV &kp TILD &kp LPAR &kp RPAR &kp DLLR &trans                             &trans &kp UNDER &kp MINUS &kp EQUAL &trans &trans
    &trans   &kp LBKT &kp RBKT &kp LBRC &kp RBRC &trans                             &trans &kp BKSP  &kp DEL   &kp SQT   &trans &trans
    &trans   &trans   &trans   &trans   &trans   &trans &trans &trans &trans &trans &kp FSLH &kp BSLH &trans   &trans    &trans &trans
                               &trans   &trans   &trans &trans &trans &trans &trans &trans   &trans   &trans
            >;
        };

        nav_layer {
            bindings = <
    &trans &trans &trans &trans &trans &trans                             &trans &kp HOME &kp UP    &kp END   &trans  &trans
    &trans &trans &trans &trans &trans &trans                             &trans &kp LEFT &kp DOWN  &kp RIGHT &trans  &trans
    &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans   &kp PG_UP &kp PG_DN &trans  &trans
                         &trans &trans &trans &trans &trans &trans &trans &trans &trans   &trans
            >;
        };

        num_layer {
            bindings = <
    &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                             &kp N6 &kp N7 &kp N8 &kp N9 &kp N0   &trans
    &trans &trans &trans &trans &trans &trans                             &trans &kp N4 &kp N5 &kp N6 &kp CMMA &trans
    &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp N0 &kp N1 &kp N2 &kp N3 &kp DOT  &trans
                         &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp N0
            >;
        };

        fn_layer {
            bindings = <
    QWERTY   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                             &kp F6     &kp F7   &kp F8   &kp F9   &kp F10  &trans
    &trans   &trans   &trans   &trans   &trans   &trans                             &trans     &kp F4   &kp F5   &kp F6   &kp F11  &trans
    &trans   &trans   &trans   &trans   &trans   &trans &trans &trans &trans &trans &bt BT_CLR &kp F1   &kp F2   &kp F3   &kp F12  &trans
                               &trans   &trans   &trans &trans &trans &trans &trans &trans     &trans   &trans
            >;
        };

/*
        empty_layer {
            bindings = <
    &trans   &trans   &trans   &trans   &trans   &trans                                 &trans   &trans   &trans   &trans   &trans   &trans
    &trans   &trans   &trans   &trans   &trans   &trans                                 &trans   &trans   &trans   &trans   &trans   &trans
    &trans   &trans   &trans   &trans   &trans   &trans   &trans &trans &trans &trans   &trans   &trans   &trans   &trans   &trans   &trans
                               &trans   &trans   &trans   &trans &trans &trans &trans   &trans   &trans   &trans
            >;
       };
*/

    };
};
